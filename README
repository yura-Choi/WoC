This is CSharpAndMe Project, named 'WoC'.


If you start the project for the first time, take a clone to the local repository on your project where you will work on your project.
Here's how to get a clone:
	>> git clone https://yuraChoi@gitlab.com/yuraChoi/WoC.git




Developers should follow the manual below.

1. Issue

   When you do all the work, start by creating an issue first.
   Otherwise, it's hard to see what's going on and what you share.
   Please write the issue in Korean.

2. Commit
   
   Write your commits in English anad write the first letter in upper case.
   When you commit, always include the issue number for each commit after the commit message with the hashtag.
   Here is an example:
	- If your issue number is 3,

	>> git commit -m "Add function for character control (See #3)"

   If you write this, you can easily view the issue by looking at the commit.

3. Branch

   When you work, always create a branch and work on that branch.
   Branch creation can be done with the 'git branch' command or with the -b attribute of the 'git checkout' command.
   Branch should be created by creating on branch for each issue, and the name of that branch should be unified in the same way as issue_issue number.

   Never push directly into the master branch. Work on your branch.

4. Merge Requests
   
   When you have finished working in your branch, you should ask for merge to apply your work to the remote repository. 
   After you have finished pushing in your local repository, you will be connected to our gitlab project on the web. 

   Enter the Merge Requests menu and click the new merge request button.
   Select the branch that you have worked on, and the branch you want to be merge, and give a description of your work and branch.
   Finally, assignee should select the yuraChoi that created this project. 



The explanation is just this.
Now, please try it yourself.

FYI. Studying git will help you use your gitlab and company life.
